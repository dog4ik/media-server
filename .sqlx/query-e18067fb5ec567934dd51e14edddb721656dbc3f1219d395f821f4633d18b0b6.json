{
  "db_name": "SQLite",
  "query": "CREATE TABLE IF NOT EXISTS shows (id INTEGER PRIMARY KEY AUTOINCREMENT, \n                                    title TEXT NOT NULL, \n                                    release_date TEXT,\n                                    poster TEXT,\n                                    blur_data TEXT,\n                                    backdrop TEXT,\n                                    plot TEXT);\n\nCREATE VIRTUAL TABLE IF NOT EXISTS shows_fts_idx USING fts5(title, plot, content='shows', content_rowid='id');\nCREATE TRIGGER IF NOT EXISTS shows_tbl_ai AFTER INSERT ON shows BEGIN\n  INSERT INTO shows_fts_idx(rowid, title, plot) VALUES (new.id, new.title, new.plot);\nEND;\nCREATE TRIGGER IF NOT EXISTS shows_tbl_ad AFTER DELETE ON shows BEGIN\n  INSERT INTO shows_fts_idx(shows_fts_idx, rowid, title, plot) VALUES('delete', old.id, old.title, old.plot);\nEND;\nCREATE TRIGGER IF NOT EXISTS shows_tbl_au AFTER UPDATE ON shows BEGIN\n  INSERT INTO shows_fts_idx(shows_fts_idx, rowid, title, plot) VALUES('delete', old.id, old.title, old.plot);\n  INSERT INTO shows_fts_idx(rowid, title, plot) VALUES (new.id, new.title, new.plot);\nEND;\n\nCREATE TABLE IF NOT EXISTS seasons (id INTEGER PRIMARY KEY AUTOINCREMENT, \n                                    show_id INTEGER NOT NULL,\n                                    number INTEGER NOT NULL,\n                                    release_date TEXT,\n                                    plot TEXT,\n                                    poster TEXT,\n                                    blur_data TEXT,\n                                    FOREIGN KEY (show_id) REFERENCES shows (id) ON DELETE CASCADE);\nCREATE TABLE IF NOT EXISTS episodes (id INTEGER PRIMARY KEY AUTOINCREMENT, \n                                    video_id INTEGER NOT NULL UNIQUE,\n                                    season_id INTEGER NOT NULL,\n                                    title TEXT NOT NULL, \n                                    number INTEGER NOT NULL,\n                                    plot TEXT,\n                                    poster TEXT,\n                                    blur_data TEXT,\n                                    release_date TEXT,\n                                    FOREIGN KEY (video_id) REFERENCES videos (id) ON DELETE CASCADE,\n                                    FOREIGN KEY (season_id) REFERENCES seasons (id) ON DELETE CASCADE);\nCREATE TABLE IF NOT EXISTS movies (id INTEGER PRIMARY KEY AUTOINCREMENT,\n                                    video_id INTEGER NOT NULL UNIQUE,\n                                    title TEXT NOT NULL,\n                                    blur_data TEXT,\n                                    backdrop TEXT,\n                                    plot TEXT,\n                                    poster TEXT,\n                                    release_date TEXT,\n                                    FOREIGN KEY (video_id) REFERENCES videos (id) ON DELETE CASCADE);\n\nCREATE VIRTUAL TABLE IF NOT EXISTS movies_fts_idx USING fts5(title, plot, content='movies', content_rowid='id');\nCREATE TRIGGER IF NOT EXISTS movies_tbl_ai AFTER INSERT ON movies BEGIN\n  INSERT INTO movies_fts_idx(rowid, title, plot) VALUES (new.id, new.title, new.plot);\nEND;\nCREATE TRIGGER IF NOT EXISTS movies_tbl_ad AFTER DELETE ON movies BEGIN\n  INSERT INTO movies_fts_idx(movies_fts_idx, rowid, title, plot) VALUES('delete', old.id, old.title, old.plot);\nEND;\nCREATE TRIGGER IF NOT EXISTS movies_tbl_au AFTER UPDATE ON movies BEGIN\n  INSERT INTO movies_fts_idx(movies_fts_idx, rowid, title, plot) VALUES('delete', old.id, old.title, old.plot);\n  INSERT INTO movies_fts_idx(rowid, title, plot) VALUES (new.id, new.title, new.plot);\nEND;\n\nCREATE TABLE IF NOT EXISTS videos (id INTEGER PRIMARY KEY AUTOINCREMENT, \n                                    path TEXT NOT NULL UNIQUE,\n                                    resources_folder TEXT NOT NULL UNIQUE,\n                                    size INTEGER NOT NULL,\n                                    duration INTEGER NOT NULL,\n                                    scan_date DATETIME DEFAULT CURRENT_TIMESTAMP);\nCREATE TABLE IF NOT EXISTS subtitles (id INTEGER PRIMARY KEY AUTOINCREMENT,\n                                    language TEXT NOT NULL,\n                                    hash TEXT NOT NULL,\n                                    path TEXT NOT NULL,\n                                    size INTEGER NOT NULL,\n                                    video_id INTEGER NOT NULL,\n                                    FOREIGN KEY (video_id) REFERENCES videos (id) ON DELETE CASCADE);\nCREATE TABLE IF NOT EXISTS history (id INTEGER PRIMARY KEY AUTOINCREMENT,\n                                    time INTEGER NOT NULL,\n                                    is_finished BOOL NOT NULL,\n                                    video_id INTEGER NOT NULL UNIQUE,\n                                    update_time DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,\n                                    FOREIGN KEY (video_id) REFERENCES videos (id) ON DELETE CASCADE);\nCREATE TABLE IF NOT EXISTS external_ids (id INTEGER PRIMARY KEY AUTOINCREMENT,\n                                    metadata_provider TEXT NOT NULL,\n                                    metadata_id TEXT NOT NULL,\n                                    show_id INTEGER,\n                                    season_id INTEGER,\n                                    episode_id INTEGER,\n                                    movie_id INTEGER,\n                                    is_prime INTEGER NOT NULL,\n                                    FOREIGN KEY (show_id) REFERENCES shows (id) ON DELETE CASCADE,\n                                    FOREIGN KEY (season_id) REFERENCES seasons (id) ON DELETE CASCADE,\n                                    FOREIGN KEY (episode_id) REFERENCES episodes (id) ON DELETE CASCADE,\n                                    FOREIGN KEY (movie_id) REFERENCES movies (id) ON DELETE CASCADE);",
  "describe": {
    "columns": [],
    "parameters": {
      "Right": 0
    },
    "nullable": []
  },
  "hash": "e18067fb5ec567934dd51e14edddb721656dbc3f1219d395f821f4633d18b0b6"
}
